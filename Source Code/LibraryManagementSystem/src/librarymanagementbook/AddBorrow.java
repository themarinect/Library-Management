/*
 * NewPurchaseBill.java
 *
 * Created on April 9, 2009, 6:21 PM
 */
package librarymanagementbook;

import com.toedter.calendar.JDateChooser;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.GregorianCalendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import util.DBConnection;
import util.UseMethod;

/**
 *
 * @author  Nguyen Manh Truong
 */
public class AddBorrow extends javax.swing.JFrame {

    static BorrowManager om;
    //static int O_ID;
    static Vector data;
    static Vector header;
    static DefaultTableModel d = new DefaultTableModel(data, header);
    DBConnection dc;
    Connection con;
    Statement stmt;
    JDateChooser StartDate, EndDate;
    SimpleDateFormat formatDate, formatInsertDate;
    GregorianCalendar today;
    String dateCreate;
    
    /** Creates new form NewPurchaseBill */
    /**
     * This constructor is used to initialize a new OrderDetails form object.
     * @param o - The OrderManager object
     */
    public AddBorrow(){}
    public AddBorrow(BorrowManager o) {
        this.om = o;
        initComponents();
        formatDate = new SimpleDateFormat("dd-MM-yyyy");
        formatInsertDate = new SimpleDateFormat("MM-dd-yyyy");
        StartDate = new JDateChooser(null, "dd-MM-yyyy");
        pn_date.add(StartDate);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        Dimension ds = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((ds.width - this.getWidth()) / 2, (ds.height - this.getHeight()) / 2);
        dc = new DBConnection();
        today = new GregorianCalendar();
        dateCreate = formatDate.format(today.getTime());
        txt_date.setText(dateCreate);
//        Vector v = new Vector();
//        v = (Vector) om.d_Borrow.getDataVector().elementAt(om.tb_Book.getSelectedRow());
//        O_ID = Integer.valueOf(v.elementAt(0).toString());
//        txt_punish.setText(0 + "");
//        if (v.elementAt(5).toString().equals("Delivered")) {
//
//            bt_add.setVisible(false);
//            bt_remove.setVisible(false);
//            bt_save.setVisible(false);
//
//        } else {
//
//            bt_add.setVisible(true);
//            bt_remove.setVisible(true);
//            bt_save.setVisible(true);
//        // pn_date.setVisible(false);
//
//        }
        SetModel();
//        lb_name.setText((v.elementAt(6).toString()));
//        txt_date.setText(v.elementAt(1).toString());
//        txt_date1.setText(v.elementAt(2).toString());
        txt_TotalBook.setText(String.valueOf(getTotal()));

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_BooktList = new javax.swing.JTable();
        bt_add = new javax.swing.JButton();
        bt_remove = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_TotalBook = new javax.swing.JTextField();
        txt_date = new javax.swing.JTextField();
        lb_total = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        bt_save = new javax.swing.JButton();
        bt_cancel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_CustName = new javax.swing.JTextField();
        btn_chooseCustomer = new javax.swing.JButton();
        btn_newCustomer = new javax.swing.JButton();
        pn_date = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Borrow ");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Book List"));

        tb_BooktList.setModel(d);
        tb_BooktList.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tb_BooktList);

        bt_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit_add.png"))); // NOI18N
        bt_add.setText("Add Book To List");
        bt_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_addActionPerformed(evt);
            }
        });

        bt_remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editdelete.png"))); // NOI18N
        bt_remove.setText("Remove");
        bt_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_removeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(339, 339, 339)
                        .addComponent(bt_add)
                        .addGap(29, 29, 29)
                        .addComponent(bt_remove, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_add, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_remove, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setText("Date Start:");

        txt_TotalBook.setEditable(false);
        txt_TotalBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TotalBookActionPerformed(evt);
            }
        });

        txt_date.setEditable(false);

        lb_total.setText("Total BookBorrow");

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        bt_save.setText("Save");
        bt_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_saveActionPerformed(evt);
            }
        });

        bt_cancel.setText("Back");
        bt_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cancelActionPerformed(evt);
            }
        });

        jLabel2.setText("Date Due:");

        jLabel3.setText("Employee Name:");

        txt_CustName.setEditable(false);

        btn_chooseCustomer.setIcon(new javax.swing.ImageIcon("E:\\NetBeansProjects\\LibraryManagementSystem\\src\\images\\Users.png")); // NOI18N
        btn_chooseCustomer.setText("Choose Employee");
        btn_chooseCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_chooseCustomerActionPerformed(evt);
            }
        });

        btn_newCustomer.setIcon(new javax.swing.ImageIcon("E:\\NetBeansProjects\\LibraryManagementSystem\\src\\images\\add user.png")); // NOI18N
        btn_newCustomer.setText("New Employee");
        btn_newCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_newCustomerActionPerformed(evt);
            }
        });

        pn_date.setLayout(new java.awt.GridLayout(1, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(378, 378, 378)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(215, 215, 215)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(285, 285, 285))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(290, Short.MAX_VALUE)
                .addComponent(bt_save)
                .addGap(58, 58, 58)
                .addComponent(bt_cancel)
                .addGap(36, 36, 36)
                .addComponent(lb_total)
                .addGap(18, 18, 18)
                .addComponent(txt_TotalBook, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(176, 176, 176))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pn_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_date)
                            .addComponent(txt_CustName, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                        .addGap(111, 111, 111)
                        .addComponent(btn_chooseCustomer)
                        .addGap(62, 62, 62)
                        .addComponent(btn_newCustomer))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_CustName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_chooseCustomer)
                    .addComponent(btn_newCustomer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(pn_date, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bt_cancel)
                            .addComponent(bt_save)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_TotalBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_total))
                        .addGap(88, 88, 88))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**This method use to set model for table
     * 
     */
    public void SetModel() {
      //  con = dc.connect();
        header = new Vector();
        data = new Vector();
        header.add("ID");
        header.add("Call Number");
        header.add("ISBN");
        header.add("Title");
        header.add("Author");
        header.add("Quantity");
        header.add("BookContinue");
        header.add("BookCopy");

//        String sql = "Select * from BorrowDetail where borrowID = " + O_ID;
//        try {
//            stmt = con.createStatement();
//            ResultSet rs = stmt.executeQuery(sql);
//            while (rs.next()) {
//                Vector temp = new Vector();
//                temp.add(UseMethod.getB_Name(O_ID).elementAt(0));
//                temp.add(UseMethod.getB_Name(O_ID).elementAt(1));
//                temp.add(UseMethod.getB_Name(O_ID).elementAt(2));
//                temp.add(UseMethod.getB_Name(O_ID).elementAt(3));
//                temp.add(UseMethod.getB_Name(O_ID).elementAt(7));
//                temp.add(1);
//                temp.add(UseMethod.getB_Name(O_ID).elementAt(8));
//                temp.add(UseMethod.getB_Name(O_ID).elementAt(4));
//                //temp.add(UseMethod.getB_Name(O_ID).elementAt(0));
////                int P_ID = rs.getInt("P_ID");
////                temp.add(UseMethod.getP_Name(P_ID));
////                temp.add(rs.getInt("Quantity"));
////                temp.add(UseMethod.getS_NameP_ID(P_ID));
////                temp.add(rs.getInt("Price"));
//                data.add(temp);
//            }
//            dc.disconnect(rs);
//            dc.disconnect(stmt);
//            dc.disconnect(con);
//        } catch (SQLException ex) {
//            Logger.getLogger(AddBorrow.class.getName()).log(Level.SEVERE, null, ex);
//        }
        d = new DefaultTableModel(data, header) {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;

            }
        };

        tb_BooktList.setModel(d);
    }
private void bt_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cancelActionPerformed
    data = new Vector();
    d = new DefaultTableModel(data, header);
    tb_BooktList.setModel(d);
    this.dispose();
}//GEN-LAST:event_bt_cancelActionPerformed
    /**This method use to add a new row to table
     * 
     * @param v - Vector contain data row will add to table
     */
    public  void AddToTable(Vector v) {
       //temp2 = new Vector();
        Vector temp2 = new Vector();

        if (d.getRowCount() >= 0) {
            for (int i = 0; i < d.getRowCount(); i++) {
                Vector temp = (Vector) d.getDataVector().elementAt(i);
                String CallNumber = temp.elementAt(1).toString();
                if (CallNumber.equals(v.elementAt(1).toString())) {
                    JOptionPane.showMessageDialog(this, "This Book exists ! ");
                    return;
////                    int oldQty = Integer.parseInt(temp.elementAt(2).toString());
////                    int newQty = Integer.parseInt(v.elementAt(1).toString());
//
//                    int ID = Integer.parseInt(temp.elementAt(0).toString());
//                    //String P_Name = (String) v.elementAt(0);
//                    String isbn = v.elementAt(2).toString();
//                    String title = v.elementAt(3).toString();
//                    String author = v.elementAt(4).toString();
//                    String quanitty = temp.elementAt(5).toString();
//                    //int Price = Integer.parseInt(v.elementAt(3).toString());
//
//                    temp2.add(ID);
//                    temp2.add(CallNumber);
////                    temp2.add(oldQty + newQty);
//                    temp2.add(isbn);
//                    temp2.add(title);
//                    temp2.add(author);
//                    temp2.add(quanitty);
//                    d.removeRow(i);


                }

            }

        }
        int ID = Integer.parseInt(v.elementAt(0).toString());
        
        String isbn = v.elementAt(2).toString();
        String title = v.elementAt(3).toString();
        String author = v.elementAt(5).toString();
        //String quanitty = v.elementAt(4).toString();
        String CallNumber = v.elementAt(1).toString();
        String NumOfCon = v.elementAt(6).toString();
        String NumOfCopy = v.elementAt(4).toString();

        temp2.add(ID);
        temp2.add(CallNumber);
        temp2.add(isbn);
        temp2.add(title);
        temp2.add(author);
        temp2.add(1);
        temp2.add(NumOfCon);
        temp2.add(NumOfCopy);
       // System.out.println(temp2);
        d.addRow(temp2);
        d.fireTableDataChanged();
        
    }

    /**This method use to get Total price of order
     * 
     * @return Total price of order
     */
    public static int getTotal() {
        int total = 0;
        for (int i = 0; i < tb_BooktList.getRowCount(); i++) {
            Vector temp = (Vector) d.getDataVector().elementAt(i);
            int to = Integer.valueOf(temp.elementAt(5).toString());
            total = total + to;
        }

        return total;
    }

private void txt_TotalBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TotalBookActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txt_TotalBookActionPerformed

private void bt_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_saveActionPerformed

    if(data.size() == 0){
        JOptionPane.showMessageDialog(this, "Book List Not Empty!");
        return;
    } 
    //System.out.println(data.size());
   
  
     if (txt_CustName.getText().equals("")) {
        JOptionPane.showMessageDialog(null, "You have to choose,or create new a customer!");
        txt_CustName.requestFocus();
        txt_CustName.selectAll();
        return;
    }
       String k;
    try {
        k = formatDate.format(StartDate.getDate());
        if (UseMethod.checkDate(txt_date.getText(), k) == false) {
            JOptionPane.showMessageDialog(null, "Real Date is erlier than Date Start");
            return;
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "You have not select RealDate!");
        return;
    }
    String [] a = new String[100];
    if (d.getRowCount() >= 0) {
            for (int i = 0; i < d.getRowCount(); i++) {
                Vector temp = (Vector) d.getDataVector().elementAt(i);
                a[i]=temp.elementAt(0).toString();
                String ga = temp.elementAt(3).toString();
                int c = Integer.parseInt(a[i]);
                System.out.println(a[i]);
                int h = Integer.parseInt(temp.elementAt(6).toString());
                int h1 = Integer.parseInt(temp.elementAt(7).toString());
//                if(h>=h1){
//                    JOptionPane.showMessageDialog(this, ga+"So luong sach con lai trong kho khong duoc lon hon hoac bang so copy");
//                    continue;
//                }               
//                if(h <= 0){
//                    JOptionPane.showMessageDialog(this, "Book In Store Not Continue! ");
//                    return;
//                }
                int b = h-1;
                String sql1 = "update book set BookContinue = "+b+"where bookID = "+c;
                dc.execute(sql1);
               //JOptionPane.showMessageDialog(this, "Ban da update NumOfContinue successful!");
                
            }
    }
    
    con = dc.connect();
    int Borrow_ID = 0;
    int E_ID = UseMethod.GetE_ID(txt_CustName.getText());
   // String Address = txt_address.getText();

    //int total = Integer.parseInt(txt_totalPrice.getText());
    String sql = "insert into Borrow(startDate,dueDate,EmployeeID) values('" + formatInsertDate.format(today.getTime()) + "','" + formatInsertDate.format(StartDate.getDate())  +"'," + E_ID + ")";
    try {
        Statement st2 = con.createStatement();
        st2.execute(sql);
        dc.disconnect(st2);
    } catch (SQLException ex) {
        Logger.getLogger(AddBorrow.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    //sqlGetNewID String command will return the newest identity id add
   
    String sqlGetNewID = "SELECT NewID = SCOPE_IDENTITY()";
    Statement st;
    try {
        st = con.createStatement();
        ResultSet rs = st.executeQuery(sqlGetNewID);
        while (rs.next()) {
            Borrow_ID = rs.getInt("NewID");
        }
        dc.disconnect(rs);
        dc.disconnect(st);
        dc.disconnect(con);
        System.out.println(Borrow_ID);
        
        
        
        for (int j = 0; j < tb_BooktList.getRowCount(); j++) {
            Vector temp = (Vector) d.getDataVector().elementAt(j);
            int Book_ID = Integer.parseInt(temp.elementAt(0).toString());
//            int P_ID = UseMethod.getP_ID(P_Name);
//            int Q_ty = Integer.parseInt(temp.elementAt(1).toString());
//            int price = Integer.parseInt(temp.elementAt(3).toString());
            String sqlInsertOB = "insert into BorrowDetail(borrowID,bookID) values(" + Borrow_ID + "," + Book_ID + ")";

            dc.execute(sqlInsertOB);
            JOptionPane.showMessageDialog(null, "Add new Borrow Success!");
        }
        om.SetModel();
    }catch(Exception r){
    
        r.printStackTrace();
    }
    
    this.dispose();
    
    //    for (int i = 0; i < d.getRowCount(); i++) {
//        Vector temp = (Vector) d.getDataVector().elementAt(i);
//        int P_ID = UseMethod.getP_ID(temp.elementAt(1).toString());
//        int Qty = Integer.parseInt(temp.elementAt(2).toString());
//        if (UseMethod.checkQuantity(Qty, P_ID) == false) {
//            JOptionPane.showMessageDialog(null, "Quantity of product : " + UseMethod.getP_Name(P_ID) + " in stock not enough for this order!");
//            return;
//
//        }
//    }
//
//    String delOldData = "delete from tblOrderDetails where O_ID = " + O_ID;
//    dc.execute(delOldData);
//    if (d.getRowCount() > 0) {
//        for (int i = 0; i < d.getRowCount(); i++) {
//            Vector temp = (Vector) d.getDataVector().elementAt(i);
//            int P_ID = UseMethod.getP_ID(temp.elementAt(1).toString());
//            int Qty = Integer.parseInt(temp.elementAt(2).toString());
//            int Price = Integer.parseInt(temp.elementAt(4).toString());
//            String sql = "insert into tblOrderDetails(O_ID,P_ID,Quantity,Price) values(" + O_ID + "," + P_ID + "," + Qty + "," + Price + ")";
//            dc.execute(sql);
//        }
//        String C_Name = lb_name.getText();
//        int C_ID = UseMethod.GetC_ID(C_Name);
//        String updateTotal = "update tblOrders set TotalPrice = " + getTotal() + " where O_ID = " + O_ID;
//        String updateC_Name = "update tblOrders set C_ID = " + C_ID + " where O_ID = " + O_ID;
//        dc.execute(updateTotal);
//        dc.execute(updateC_Name);
//        JOptionPane.showMessageDialog(null, "Update Success!");
//        om.SetModel();
//        this.dispose();
//    } else {
//        JOptionPane.showMessageDialog(null, "You cant update empty order!");
//        return;
//    }
}//GEN-LAST:event_bt_saveActionPerformed

private void bt_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_addActionPerformed
    ListAllBooks a = new ListAllBooks("Add Borrow");
    a.setVisible(true);
}//GEN-LAST:event_bt_addActionPerformed

private void bt_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_removeActionPerformed
    
   if(tb_BooktList.getSelectedRow() >= 0){
    d.removeRow(tb_BooktList.getSelectedRow());
    txt_TotalBook.setText(String.valueOf(getTotal()));
   }else{                                         
   
       JOptionPane.showMessageDialog(this, "You choose book delete");
   }
}//GEN-LAST:event_bt_removeActionPerformed

private void btn_chooseCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_chooseCustomerActionPerformed
// TODO add your handling code here:
    ListAllEmployee list = new ListAllEmployee(this);
    //this.setVisible(false);
    list.setVisible(true);
}//GEN-LAST:event_btn_chooseCustomerActionPerformed

private void btn_newCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_newCustomerActionPerformed
// TODO add your handling code here:
    AddEmployee au = new AddEmployee(this);
    au.setVisible(true);
}//GEN-LAST:event_btn_newCustomerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new AddBorrow(om).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_add;
    private javax.swing.JButton bt_cancel;
    private javax.swing.JButton bt_remove;
    private javax.swing.JButton bt_save;
    private javax.swing.JButton btn_chooseCustomer;
    private javax.swing.JButton btn_newCustomer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_total;
    private javax.swing.JPanel pn_date;
    public static javax.swing.JTable tb_BooktList;
    public javax.swing.JTextField txt_CustName;
    public static javax.swing.JTextField txt_TotalBook;
    private javax.swing.JTextField txt_date;
    // End of variables declaration//GEN-END:variables
}

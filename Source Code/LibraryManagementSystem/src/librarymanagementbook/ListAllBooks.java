/*
 * ListAllProducts.java
 *
 * Created on April 12, 2009, 9:34 AM
 */
package librarymanagementbook;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import util.DBConnection;
import util.Search;

/**
 *
 * @author  Nguyen Manh Truong
 */
public class ListAllBooks extends javax.swing.JFrame {

    DBConnection dc = new DBConnection();
    Connection con;
    Statement stmt;
    Vector data = new Vector();
    Vector header = new Vector();
    DefaultTableModel d;
    static String S_Name;
    String BorrowType;
    

    /** Creates new form ListAllProducts */
    /**
     * This constructor is used to initialize a new ListAllProducts form object.
     * @param Supplier - String Supplier
     */
    public ListAllBooks(String type) {
       // this.S_Name = Supplier;
        BorrowType = type;
        initComponents();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        Dimension ds = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((ds.width - this.getWidth()) / 2, (ds.height - this.getHeight()) / 2);
        con = dc.connect();

        try {
            stmt = con.createStatement();
//            Statement stmt2 = con.createStatement();
//
//            String sql_Sup = "select S_ID from tblSupplier where S_Name = '" + S_Name + "'";
//            int S_ID = 0;
//            ResultSet rs_Sup = stmt2.executeQuery(sql_Sup);
//            while (rs_Sup.next()) {
//                S_ID = rs_Sup.getInt("S_ID");
//            }
//            rs_Sup.close();
//            stmt2.close();

            String sql = "select * from Book ";
            ResultSet rs = stmt.executeQuery(sql);
             header.add("ID");
             header.add("Call Number");
             header.add("ISBN");
             header.add("Title");
             header.add("BookCopy");
             header.add("Author");
             header.add("BookContinue");
             
             
            while (rs.next()) {
                Vector temp = new Vector();
                temp.add(rs.getString(1));
                temp.add(rs.getString(2));
                temp.add(rs.getString(3));
                temp.add(rs.getString(4));
                temp.add(rs.getString(5));
                temp.add(rs.getString(6));
                temp.add(rs.getString(8));
                //temp.add(rs.getInt("NumOfCopies"));

                data.add(temp);

            }
            d = new DefaultTableModel(data, header) {

                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            tb_Products.setModel(d);
            TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(d);
            tb_Products.setRowSorter(sorter);
            rs.close();
            stmt.close();
            dc.disconnect(con);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    /**This method to Add Product to bill
     * 
     */
    public void DoAdd() {
        if (tb_Products.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Please choose one Book!");
            return;
        }
        int Row[] = tb_Products.getSelectedRows();
        if (Row.length > 1) {
            JOptionPane.showMessageDialog(null, "You can choose only one Book at same time!");
            return;
        }
      //  for (int i = 0; i < Row.length; i++) {
            Vector v = (Vector) d.getDataVector().elementAt(Row[0]);
//            if(v.elementAt(2).toString().equals("0"))
//            {
//                JOptionPane.showMessageDialog(null, "This product in stock is empty!You can\'t add!");
//                return;
//            }
//            String ProductName = v.elementAt(0).toString();
           
            int u = Integer.parseInt(v.elementAt(6).toString());
            if(u<=0){
                JOptionPane.showMessageDialog(this, "Amoun BookCopy Finish");
                return;
            }
            if(BorrowType.equals("Borrow Detail")){
             BorrowDetails obj = new BorrowDetails();
             obj.AddToTable(v);
             obj.txt_TotalBook.setText(String.valueOf(obj.getTotal()));
            }
            if(BorrowType.equals("Add Borrow")){
             AddBorrow obj = new AddBorrow();
             obj.AddToTable(v);
             obj.txt_TotalBook.setText(String.valueOf(obj.getTotal()));
             this.setVisible(true);
            }
            

      //  }


        this.dispose();
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bt_Add = new javax.swing.JButton();
        bt_Cancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_Products = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Choose Book");
        setResizable(false);

        bt_Add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit_add.png"))); // NOI18N
        bt_Add.setText("Add");
        bt_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_AddActionPerformed(evt);
            }
        });

        bt_Cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button_cancel.png"))); // NOI18N
        bt_Cancel.setText("Cancel");
        bt_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_CancelActionPerformed(evt);
            }
        });

        tb_Products.getTableHeader().setReorderingAllowed(false);
        tb_Products.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_ProductsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_Products);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setText("CallNumber");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))))
            .addGroup(layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(bt_Add)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bt_Cancel))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_Cancel))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void bt_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_AddActionPerformed
    DoAdd();
}//GEN-LAST:event_bt_AddActionPerformed

private void bt_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_CancelActionPerformed
    this.dispose();
}//GEN-LAST:event_bt_CancelActionPerformed

private void tb_ProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_ProductsMouseClicked
    if (evt.getClickCount() == 2) {
        DoAdd();
    }
}//GEN-LAST:event_tb_ProductsMouseClicked

public void search() {
        
            
            String searchKey = jTextField1.getText();
           // Search s = new Search();
           // con = dc.connect();
           // Statement stmt1 = con.createStatement();
            if(!searchKey.equals("")){
            String sql = "exec tblBook_SearchByCallnumber1 '" + searchKey + "'";
            ReturnSalesSearch(sql);
            }
       
    }

 public void ReturnSalesSearch(String sql) {
        data = new Vector();
        con = dc.connect();
        try {
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                Vector temp = new Vector();
                 temp.add(rs.getInt(1));
                temp.add(rs.getString(2));
                temp.add(rs.getString(3));
                temp.add(rs.getString(4));
                temp.add(rs.getString(5));
                temp.add(rs.getString(6));
                temp.add(rs.getString(7));
                //temp.add(rs.getInt("NumOfCopies"));

                data.add(temp);

            }
            System.out.println(data);
//            DefaultTableModel d1 = new DefaultTableModel(data, header) {
//
//                @Override
//                public boolean isCellEditable(int row, int column) {
//                    return false;
//                }
//            };
//
//            tb_Products.setModel(d1);
             d = new DefaultTableModel(data, header) {

                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            tb_Products.setModel(d);
            TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(d);
            tb_Products.setRowSorter(sorter);
            dc.disconnect(rs);
            dc.disconnect(stmt);
            dc.disconnect(con);


        } catch (Exception ex) {
           // Logger.getLogger(ListAllBooks.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }

    }

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    search();
}//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//
//            public void run() {
//                new ListAllBooks().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_Add;
    private javax.swing.JButton bt_Cancel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tb_Products;
    // End of variables declaration//GEN-END:variables
}
